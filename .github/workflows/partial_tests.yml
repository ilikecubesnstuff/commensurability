name: Partial Package Testing

on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

jobs:
  tox:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.13]
    name: Tox on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}

      # only sync is required, no need to update lock file
      # https://pdm-project.org/latest/usage/hooks/#dependencies-management
      - name: Install Dependencies
        run: |
          pdm sync -G dev, -G github

      - name: Run Tox
        run: |
          pdm run -v tox

  # NOTE: since pidgey is meant to streamline handling backends, maybe one is sufficient weekly
  #       galpy has the most efficient setup, so that can be used as the "primary backend"
  galpy:
    strategy:
      matrix:
        python-version: [3.13]
    name: Galpy Scripts on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest  # no windows or macOS testing currently
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda with Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install Packages
        # "bash -el {0}" required with conda-incubator/setup-miniconda@v3
        # see: https://github.com/conda-incubator/setup-miniconda?tab=readme-ov-file#important
        shell: bash -el {0}
        # test environment is set up by conda-incubator/setup-miniconda@v3
        # dependencies to install:
        # - galpy: the orbit integration backend
        # - gsl: used by galpy for fast integration
        # - pytest: testing framework to run the test scripts
        run: |
          conda activate test
          conda install -c conda-forge gsl galpy pytest sybil
          python -m pip install --upgrade pip
          python -m pip install .

      - name: Test Docs
        # "bash -el {0}" required with conda-incubator/setup-miniconda@v3
        # see: https://github.com/conda-incubator/setup-miniconda?tab=readme-ov-file#important
        shell: bash -el {0}
        # ignore computationally intensive tests
        run: pytest docs --ignore=docs/tessellation/implementation_ar_test.py --ignore=docs/tessellation/implementation_norm_test.py --ignore=docs/tessellation/usage/analysis/rotating_bar_test.py --ignore=docs/tessellation/usage/analysis/solar_neighborhood_test.py

      # TBA: test galpy scripts inside examples
